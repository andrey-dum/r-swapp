{"version":3,"sources":["components/Loader/Loader.jsx","components/Comments/Comments.jsx","components/Character/Character.jsx","hooks/useCharacters.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","Comments","comments","map","comment","text","id","Character","char","changeItem","useState","setComment","name","birth_year","type","value","onChange","e","target","onClick","disabled","length","useCharacters","characters","setCharacters","loading","setLoading","error","setError","fetchItems","a","axios","get","res","data","results","item","useEffect","App","ItemName","updated","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PASeA,MANf,WACE,OACE,sBAAKC,UAAU,WAAf,UAA0B,wBAAW,wBAAW,wBAAW,4B,OCMhDC,MATf,YAA+B,IAAZC,EAAW,EAAXA,SACjB,OACE,sBAAKF,UAAU,WAAf,UACE,2CADF,OAEGE,QAFH,IAEGA,OAFH,EAEGA,EAAUC,KAAI,SAAAC,GAAO,OAAI,qBAAsBJ,UAAU,UAAhC,SAA2CI,EAAQC,MAAzCD,EAAQE,WCHnC,SAASC,EAAT,GAAwC,IAAD,EAAnBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAAa,EAEtBC,mBAAS,IAFa,mBAE7CN,EAF6C,KAEpCO,EAFoC,KAQpD,OACE,sBAAKX,UAAU,OAAf,UACE,qBAAIA,UAAU,QAAd,UAAuBQ,EAAKI,KAA5B,MAAqCJ,EAAKK,cAC1C,0BACEC,KAAK,OACLR,GAAIE,EAAKI,KACTA,KAAMJ,EAAKI,KACXG,MAAOX,EACPY,SAZgB,SAAAC,GACpBN,EAAWM,EAAEC,OAAOH,UAclB,wBACEI,QAAS,kBAAMV,EAAWD,EAAKI,KAAM,CAACD,aAAYN,KAAMD,KACxDgB,UAAWhB,EACXJ,UAAU,MAHZ,6BAOG,UAACQ,EAAKN,gBAAN,aAAC,EAAemB,SACjB,cAAC,EAAD,CAAUnB,SAAUM,EAAKN,c,6CCElBoB,MA5Bf,WACE,IADuB,EAEaZ,mBAAS,IAFtB,mBAEhBa,EAFgB,KAEJC,EAFI,OAGOd,oBAAS,GAHhB,mBAGhBe,EAHgB,KAGPC,EAHO,OAIGhB,mBAAS,MAJZ,mBAIhBiB,EAJgB,KAITC,EAJS,KAMjBC,EAAU,uCAAG,4BAAAC,EAAA,+EAECC,IAAMC,IAPT,iCAKE,OAEXC,EAFW,OAGfT,EAAcS,EAAIC,KAAKC,QAAQhC,KAAI,SAAAiC,GAAI,kCAASA,GAAT,IAAelC,SAAU,SAChEwB,GAAW,GAJI,gDAOfE,EAAS,EAAD,IACRF,GAAW,GARI,yDAAH,qDAiBhB,OALAW,qBAAU,WACRR,MACC,IAGI,CACLN,aAAYC,gBAAeC,UAASE,U,MCOzBW,MA5Bf,WAAgB,IAAD,EACgChB,IAAtCC,EADM,EACNA,WAAYC,EADN,EACMA,cAAeC,EADrB,EACqBA,QAE5BhB,EAAa,SAAC8B,EAAD,GAAmC,IAAvB5B,EAAsB,EAAtBA,WAAYN,EAAU,EAAVA,KACnCmC,EAAWjB,EAAWpB,KAAI,SAAAK,GAAI,OAAIA,EAAKI,OAAS2B,EAAd,2BAA8B/B,GAA9B,IAAoCN,SAAS,GAAD,mBAAMM,EAAKN,UAAX,CAAqB,CAACI,GAAImC,KAAKC,MAAOrC,KAAMA,OAAYG,KAC5IgB,EAAcgB,GACd7B,EAAW,KAGb,OAAGc,EACM,cAAC,EAAD,IAIP,qBAAKzB,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACIuB,EAAWpB,KAAI,SAAAK,GAAI,OACnB,cAACD,EAAD,CAEEC,KAAMA,EACNC,WAAYA,GAFPD,EAAKI,cCbP+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c9d9137.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Loader.css'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\n\r\nfunction Comments({comments}) {\r\n  return (\r\n    <div className=\"comments\">\r\n      <h4>Comments:</h4>\r\n      {comments?.map(comment => <div key={comment.id} className=\"comment\">{comment.text}</div>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useState } from 'react'\r\nimport Comments from '../Comments/Comments';\r\n\r\nexport default function Character({char, changeItem}) {\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const changeHandler = e => {\r\n    setComment(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <h4 className=\"title\">{char.name} - {char.birth_year}</h4>\r\n      <textarea\r\n        type=\"text\"\r\n        id={char.name}\r\n        name={char.name}\r\n        value={comment}\r\n        onChange={changeHandler}\r\n      />\r\n\r\n      <button\r\n        onClick={() => changeItem(char.name, {setComment, text: comment})}\r\n        disabled={!comment}\r\n        className=\"btn\"\r\n      >\r\n        Ð¡omment\r\n      </button>\r\n      { !!char.comments?.length &&\r\n        <Comments comments={char.comments} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction useCharacters() {\r\n  const fetchUrl = \"https://swapi.dev/api/people/\";\r\n  const [characters, setCharacters] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchItems = async () => {\r\n    try {\r\n      let res = await axios.get(fetchUrl);\r\n      setCharacters(res.data.results.map(item => ({...item, comments: []})))\r\n      setLoading(false)\r\n\r\n    } catch (error) {\r\n      setError(error)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchItems()\r\n  }, []);\r\n\r\n\r\n  return {\r\n    characters, setCharacters, loading, error\r\n  };\r\n}\r\n\r\nexport default useCharacters;","import Loader from './components/Loader/Loader';\nimport Character from './components/Character/Character';\n\nimport useCharacters from './hooks/useCharacters';\nimport './App.css';\n\n\nfunction App() {\n  const {characters, setCharacters, loading} = useCharacters()\n\n  const changeItem = (ItemName, {setComment, text}) => {\n    const updated =  characters.map(char => char.name === ItemName ? ({...char, comments: [...char.comments, {id: Date.now(), text: text} ]}) : char)\n    setCharacters(updated)\n    setComment('')\n  }\n\n  if(loading) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"items\">\n        { characters.map(char => (\n          <Character\n            key={char.name}\n            char={char}\n            changeItem={changeItem}\n            />\n        )) }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}